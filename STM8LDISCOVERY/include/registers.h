#include <stdint.h>

#define bitset(reg,mask)   (reg |=  mask)
#define bitclear(reg,mask) (reg &= ~mask)

#define SYSCFG_RMPCR1	(*(volatile uint8_t *)0x509E)
#define PC_ODR	(*(volatile uint8_t *)0x500a)
#define PC2_IDR (*(volatile uint8_t *)0x500b)
#define PC_DDR	(*(volatile uint8_t *)0x500c)
#define PC_CR1	(*(volatile uint8_t *)0x500d)
#define PC_CR2	(*(volatile uint8_t *)0x500e)

#define PE_ODR	(*(volatile uint8_t *)0x5014)
#define PE_DDR	(*(volatile uint8_t *)0x5016)
#define PE_CR1	(*(volatile uint8_t *)0x5017)
#define PE_CR2	(*(volatile uint8_t *)0x5018)

#define CLK_DIVR	(*(volatile uint8_t *)0x50c0)
#define CLK_PCKENR2	(*(volatile uint8_t *)0x50c4)

#define TIM1_CR1	(*(volatile uint8_t *)0x52b0)
#define TIM1_PCNTRH	(*(volatile uint8_t *)0x52bf)
#define TIM1_PCNTRL	(*(volatile uint8_t *)0x52c0)
#define TIM1_PSCRH	(*(volatile uint8_t *)0x52c1)
#define TIM1_PSCRL	(*(volatile uint8_t *)0x52c2)

#define I2C1_CR1	(*(volatile uint8_t *)0x5210)
#define I2C1_CR2	(*(volatile uint8_t *)0x5211)
#define I2C1_FREQR	(*(volatile uint8_t *)0x5212)
#define I2C1_OARL	(*(volatile uint8_t *)0x5213)
#define I2C1_OARH	(*(volatile uint8_t *)0x5214)
#define I2C1_DR	    (*(volatile uint8_t *)0x5216)
#define I2C1_SR1	(*(volatile uint8_t *)0x5217)
#define I2C1_SR2	(*(volatile uint8_t *)0x5218)
#define I2C1_SR3	(*(volatile uint8_t *)0x5219)
#define I2C1_ITR	(*(volatile uint8_t *)0x521A)
#define I2C1_CCRL	(*(volatile uint8_t *)0x521B)
#define I2C1_CCRH	(*(volatile uint8_t *)0x521C)
#define I2C1_TRISER	(*(volatile uint8_t *)0x521D)
#define I2C1_PECR	(*(volatile uint8_t *)0x521E)

#define SPI1_CR1	(*(volatile uint8_t *)0x5200)
#define SPI1_CR2	(*(volatile uint8_t *)0x5201)
#define SPI1_ICR	(*(volatile uint8_t *)0x5202)
#define SPI1_SR	    (*(volatile uint8_t *)0x5203)
#define SPI1_DR	    (*(volatile uint8_t *)0x5204)
#define SPI1_CRCPR	(*(volatile uint8_t *)0x5205)
#define SPI1_RXCRCR	(*(volatile uint8_t *)0x5206)
#define SPI1_TXCRCR	(*(volatile uint8_t *)0x5207)

#define LCD_CR1	(*(volatile uint8_t *)0x5400)
#define LCD_CR2	(*(volatile uint8_t *)0x5401)
#define LCD_CR3	(*(volatile uint8_t *)0x5402)
#define LCD_FRQ	(*(volatile uint8_t *)0x5403)
#define LCD_PM0	(*(volatile uint8_t *)0x5404)
#define LCD_PM1	(*(volatile uint8_t *)0x5405)
#define LCD_PM2	(*(volatile uint8_t *)0x5406)
#define LCD_PM3	(*(volatile uint8_t *)0x5407)
#define LCD_RAM0	(*(volatile uint8_t *)0x540C)
#define LCD_RAM1	(*(volatile uint8_t *)0x540D)
#define LCD_RAM2	(*(volatile uint8_t *)0x540E)
#define LCD_RAM3	(*(volatile uint8_t *)0x540F)
#define LCD_RAM4	(*(volatile uint8_t *)0x5410)
#define LCD_RAM5	(*(volatile uint8_t *)0x5411)
#define LCD_RAM6	(*(volatile uint8_t *)0x5412)
#define LCD_RAM7	(*(volatile uint8_t *)0x5413)
#define LCD_RAM8	(*(volatile uint8_t *)0x5414)
#define LCD_RAM9	(*(volatile uint8_t *)0x5415)
#define LCD_RAM10	(*(volatile uint8_t *)0x5416)
#define LCD_RAM11	(*(volatile uint8_t *)0x5417)
#define LCD_RAM12	(*(volatile uint8_t *)0x5418)
#define LCD_RAM13	(*(volatile uint8_t *)0x5419)